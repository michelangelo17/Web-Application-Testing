import React from 'react'
import { render, fireEvent } from '@testing-library/react'
import App from './App'

test('renders app without crashing', () => {
  render(<App />)
})

test('contains the site title', () => {
  const { getByText } = render(<App />)
  getByText(/baseball counter/i)
})

test('should update display when ball button clicked', () => {
  const { getByTestId } = render(<App />)
  const ballButton = getByTestId('ballButton')
  const ballDisplay = getByTestId('ballDisplay')
  fireEvent.click(ballButton)
  expect(ballDisplay).toHaveTextContent(1)
  fireEvent.click(ballButton)
  expect(ballDisplay).toHaveTextContent(2)
})


test('should update display when strike button clicked', () => {
  const { getByTestId } = render(<App />)
  const strikeButton = getByTestId('strikeButton')
  const strikeDisplay = getByTestId('strikeDisplay')
  fireEvent.click(strikeButton)
  expect(strikeDisplay).toHaveTextContent(1)
  fireEvent.click(strikeButton)
  expect(strikeDisplay).toHaveTextContent(2)
})

test('should update display when foul button clicked', () => {
  const { getByTestId } = render(<App />)
  const foulButton = getByTestId('foulButton')
  const strikeDisplay = getByTestId('strikeDisplay')
  fireEvent.click(foulButton)
  expect(strikeDisplay).toHaveTextContent(1)
  fireEvent.click(foulButton)
  expect(strikeDisplay).toHaveTextContent(2)
})

test('should reset strikes/balls when hit/walk button clicked', () => {
  const { getByTestId } = render(<App />)
  const strikeDisplay = getByTestId('strikeDisplay')
  const ballDisplay = getByTestId('ballDisplay')
  const ballButton = getByTestId('ballButton')
  const strikeButton = getByTestId('strikeButton')
  const foulButton = getByTestId('foulButton')
  const hitWalkButton = getByTestId('hitWalkButton')
  fireEvent.click(strikeButton)
  fireEvent.click(strikeButton)
  fireEvent.click(ballButton)
  fireEvent.click(foulButton)
  expect(strikeDisplay).toHaveTextContent(2)
  expect(ballDisplay).toHaveTextContent(1)
  fireEvent.click(hitWalkButton)
  expect(strikeDisplay).toHaveTextContent(0)
  expect(ballDisplay).toHaveTextContent(0)
})

test('should update display when out button clicked', () => {
  const { getByTestId } = render(<App />)
  const outButton = getByTestId('outButton')
  const ballButton = getByTestId('ballButton')
  const strikeButton = getByTestId('strikeButton')
  const outDisplay = getByTestId('outDisplay')
  const strikeDisplay = getByTestId('strikeDisplay')
  const ballDisplay = getByTestId('ballDisplay')
  fireEvent.click(ballButton)
  expect(ballDisplay).toHaveTextContent(1)
  fireEvent.click(strikeButton)
  fireEvent.click(strikeButton)
  fireEvent.click(strikeButton)
  expect(strikeDisplay).toHaveTextContent(3)
  fireEvent.click(outButton)
  expect(outDisplay).toHaveTextContent(1)
  expect(ballDisplay).toHaveTextContent(0)
  expect(strikeDisplay).toHaveTextContent(0)
  fireEvent.click(outButton)
  expect(outDisplay).toHaveTextContent(2)
  expect(ballDisplay).toHaveTextContent(0)
  expect(strikeDisplay).toHaveTextContent(0)
})

test('should update display when run button clicked', () => {
  const { getByTestId } = render(<App />)
  const runButton = getByTestId('runButton')
  const ballButton = getByTestId('ballButton')
  const strikeButton = getByTestId('strikeButton')
  const runDisplay = getByTestId('runDisplay')
  const strikeDisplay = getByTestId('strikeDisplay')
  const ballDisplay = getByTestId('ballDisplay')
  fireEvent.click(ballButton)
  expect(ballDisplay).toHaveTextContent(1)
  fireEvent.click(strikeButton)
  fireEvent.click(strikeButton)
  fireEvent.click(strikeButton)
  expect(strikeDisplay).toHaveTextContent(3)
  fireEvent.click(runButton)
  expect(runDisplay).toHaveTextContent(1)
  expect(ballDisplay).toHaveTextContent(0)
  expect(strikeDisplay).toHaveTextContent(0)
  fireEvent.click(runButton)
  expect(runDisplay).toHaveTextContent(2)
  expect(ballDisplay).toHaveTextContent(0)
  expect(strikeDisplay).toHaveTextContent(0)
})

test('should update display when error button clicked', () => {
  const { getByTestId } = render(<App />)
  const errorButton = getByTestId('errorButton')
  const errorDisplay = getByTestId('errorDisplay')
  fireEvent.click(errorButton)
  expect(errorDisplay).toHaveTextContent(1)
  fireEvent.click(errorButton)
  expect(errorDisplay).toHaveTextContent(2)
})